<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="6" total="21" passed="15" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-29T22:35:35 IST" name="APIAutomation" finished-at="2023-05-29T22:35:55 IST" duration-ms="19972">
    <groups>
    </groups>
    <test started-at="2023-05-29T22:35:35 IST" name="API" finished-at="2023-05-29T22:35:55 IST" duration-ms="19972">
      <class name="com.products.tests.Scenario2">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:49 IST" name="beforeMethod" finished-at="2023-05-29T22:35:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testGetLimitCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetLimitCart()[pri:1, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:49 IST" name="testGetLimitCart" finished-at="2023-05-29T22:35:50 IST" duration-ms="554" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLimitCart -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="afterMethod" finished-at="2023-05-29T22:35:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="beforeMethod" finished-at="2023-05-29T22:35:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testSortCartResult()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSortCartResult()[pri:2, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="testSortCartResult" finished-at="2023-05-29T22:35:50 IST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortCartResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="afterMethod" finished-at="2023-05-29T22:35:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="beforeMethod" finished-at="2023-05-29T22:35:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDateRange()[pri:3, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:50 IST" name="testDateRange" finished-at="2023-05-29T22:35:51 IST" duration-ms="793" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateRange -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@7bba5817]" started-at="2023-05-29T22:35:51 IST" name="afterMethod" finished-at="2023-05-29T22:35:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.products.tests.Scenario2 -->
      <class name="com.products.tests.Scenario3">
        <test-method signature="testGetAllUsers()[pri:1, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:51 IST" name="testGetAllUsers" finished-at="2023-05-29T22:35:53 IST" duration-ms="1668" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:51 IST" name="beforeMethod" finished-at="2023-05-29T22:35:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testGetAllUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:53 IST" name="afterMethod" finished-at="2023-05-29T22:35:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testUpdateUser()[pri:2, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:53 IST" name="testUpdateUser" finished-at="2023-05-29T22:35:54 IST" duration-ms="959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:53 IST" name="beforeMethod" finished-at="2023-05-29T22:35:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testUpdateUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="afterMethod" finished-at="2023-05-29T22:35:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="beforeMethod" finished-at="2023-05-29T22:35:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testAddUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddUser()[pri:3, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="testAddUser" finished-at="2023-05-29T22:35:54 IST" duration-ms="820" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUser -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="afterMethod" finished-at="2023-05-29T22:35:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="beforeMethod" finished-at="2023-05-29T22:35:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testDeleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDeleteUser()[pri:4, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:54 IST" name="testDeleteUser" finished-at="2023-05-29T22:35:55 IST" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@75437611]" started-at="2023-05-29T22:35:55 IST" name="afterMethod" finished-at="2023-05-29T22:35:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.products.tests.Scenario3 -->
      <class name="com.products.tests.Scenario1">
        <test-method signature="tesGetAllProducts()[pri:1, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:47 IST" name="tesGetAllProducts" finished-at="2023-05-29T22:35:47 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesGetAllProducts -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:47 IST" name="beforeMethod" finished-at="2023-05-29T22:35:47 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.tesGetAllProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:47 IST" name="afterMethod" finished-at="2023-05-29T22:35:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:47 IST" name="beforeMethod" finished-at="2023-05-29T22:35:47 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.testDeleteProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDeleteProduct()[pri:2, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:47 IST" name="testDeleteProduct" finished-at="2023-05-29T22:35:48 IST" duration-ms="581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:48 IST" name="afterMethod" finished-at="2023-05-29T22:35:48 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:48 IST" name="beforeMethod" finished-at="2023-05-29T22:35:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.testAddProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddProduct()[pri:3, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:48 IST" name="testAddProduct" finished-at="2023-05-29T22:35:49 IST" duration-ms="1223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProduct -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@33065d67]" started-at="2023-05-29T22:35:49 IST" name="afterMethod" finished-at="2023-05-29T22:35:49 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.products.tests.Scenario1 -->
      <class name="com.products.tests.APISecurity">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:34 IST" name="beforeSuite" finished-at="2023-05-29T22:35:35 IST" duration-ms="1296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:35 IST" name="beforeMethod" finished-at="2023-05-29T22:35:35 IST" duration-ms="19" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.APISecurity.testGetAccessToken()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetAccessToken()[pri:1, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:35 IST" name="testGetAccessToken" finished-at="2023-05-29T22:35:40 IST" duration-ms="5214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAccessToken -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:40 IST" name="afterMethod" finished-at="2023-05-29T22:35:40 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:40 IST" name="beforeMethod" finished-at="2023-05-29T22:35:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.APISecurity.testBearerAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testBearerAuthorization()[pri:2, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:40 IST" name="testBearerAuthorization" finished-at="2023-05-29T22:35:42 IST" depends-on-methods="com.products.tests.APISecurity.testGetAccessToken" duration-ms="1398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBearerAuthorization -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:42 IST" name="afterMethod" finished-at="2023-05-29T22:35:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:42 IST" name="beforeMethod" finished-at="2023-05-29T22:35:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.APISecurity.testOpenAuthorization()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testOpenAuthorization()[pri:3, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:42 IST" name="testOpenAuthorization" finished-at="2023-05-29T22:35:44 IST" depends-on-methods="com.products.tests.APISecurity.testGetAccessToken" duration-ms="1893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOpenAuthorization -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:44 IST" name="afterMethod" finished-at="2023-05-29T22:35:44 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:44 IST" name="beforeMethod" finished-at="2023-05-29T22:35:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.APISecurity.testBadRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testBadRequest()[pri:4, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:44 IST" name="testBadRequest" finished-at="2023-05-29T22:35:45 IST" duration-ms="1523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBadRequest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:45 IST" name="afterMethod" finished-at="2023-05-29T22:35:45 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:45 IST" name="beforeMethod" finished-at="2023-05-29T22:35:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.APISecurity.testUnauthorized()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUnauthorized()[pri:5, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:45 IST" name="testUnauthorized" finished-at="2023-05-29T22:35:47 IST" duration-ms="1476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUnauthorized -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:47 IST" name="afterMethod" finished-at="2023-05-29T22:35:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.products.tests.APISecurity@795509d9]" started-at="2023-05-29T22:35:55 IST" name="afterSuite" finished-at="2023-05-29T22:35:55 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.products.tests.APISecurity -->
    </test> <!-- API -->
  </suite> <!-- APIAutomation -->
  <suite started-at="2023-05-29T22:35:56 IST" name="Student-API-Automation" finished-at="2023-05-29T22:35:56 IST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Student-API-Automation -->
</testng-results>
