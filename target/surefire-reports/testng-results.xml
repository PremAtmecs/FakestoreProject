<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="14" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-30T10:47:43 IST" name="APIAutomation" finished-at="2023-05-30T10:48:04 IST" duration-ms="20586">
    <groups>
    </groups>
    <test started-at="2023-05-30T10:47:43 IST" name="API" finished-at="2023-05-30T10:48:04 IST" duration-ms="20586">
      <class name="com.products.tests.Scenario2">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:57 IST" name="beforeMethod" finished-at="2023-05-30T10:47:57 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testGetLimitCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetLimitCart()[pri:1, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:57 IST" name="testGetLimitCart" finished-at="2023-05-30T10:47:58 IST" duration-ms="1042" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetLimitCart -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:58 IST" name="afterMethod" finished-at="2023-05-30T10:47:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:58 IST" name="beforeMethod" finished-at="2023-05-30T10:47:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testSortCartResult()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testSortCartResult()[pri:2, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:58 IST" name="testSortCartResult" finished-at="2023-05-30T10:47:59 IST" duration-ms="869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSortCartResult -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:59 IST" name="afterMethod" finished-at="2023-05-30T10:47:59 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:59 IST" name="beforeMethod" finished-at="2023-05-30T10:47:59 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario2.testDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDateRange()[pri:3, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:47:59 IST" name="testDateRange" finished-at="2023-05-30T10:48:00 IST" duration-ms="1028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateRange -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario2@5149d738]" started-at="2023-05-30T10:48:00 IST" name="afterMethod" finished-at="2023-05-30T10:48:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.products.tests.Scenario2 -->
      <class name="com.products.tests.Scenario3">
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:00 IST" name="beforeMethod" finished-at="2023-05-30T10:48:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testGetAllUsers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testGetAllUsers()[pri:1, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:00 IST" name="testGetAllUsers" finished-at="2023-05-30T10:48:01 IST" duration-ms="942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllUsers -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:01 IST" name="afterMethod" finished-at="2023-05-30T10:48:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:01 IST" name="beforeMethod" finished-at="2023-05-30T10:48:01 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testUpdateUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testUpdateUser()[pri:2, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:01 IST" name="testUpdateUser" finished-at="2023-05-30T10:48:02 IST" duration-ms="1531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateUser -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:02 IST" name="afterMethod" finished-at="2023-05-30T10:48:02 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:02 IST" name="beforeMethod" finished-at="2023-05-30T10:48:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testAddUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddUser()[pri:3, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:02 IST" name="testAddUser" finished-at="2023-05-30T10:48:03 IST" duration-ms="923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddUser -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:03 IST" name="afterMethod" finished-at="2023-05-30T10:48:03 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:03 IST" name="beforeMethod" finished-at="2023-05-30T10:48:03 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario3.testDeleteUser()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDeleteUser()[pri:4, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:03 IST" name="testDeleteUser" finished-at="2023-05-30T10:48:04 IST" duration-ms="869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario3@3a7442c7]" started-at="2023-05-30T10:48:04 IST" name="afterMethod" finished-at="2023-05-30T10:48:04 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.products.tests.Scenario3 -->
      <class name="com.products.tests.Scenario1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:41 IST" name="beforeSuite" finished-at="2023-05-30T10:47:43 IST" duration-ms="2730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:43 IST" name="beforeMethod" finished-at="2023-05-30T10:47:43 IST" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.tesGetAllProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="tesGetAllProducts()[pri:1, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:43 IST" name="tesGetAllProducts" finished-at="2023-05-30T10:47:51 IST" duration-ms="7836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tesGetAllProducts -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:51 IST" name="afterMethod" finished-at="2023-05-30T10:47:51 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:51 IST" name="beforeMethod" finished-at="2023-05-30T10:47:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.testDeleteProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDeleteProduct()[pri:2, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:51 IST" name="testDeleteProduct" finished-at="2023-05-30T10:47:53 IST" duration-ms="1196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:53 IST" name="afterMethod" finished-at="2023-05-30T10:47:53 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:53 IST" name="beforeMethod" finished-at="2023-05-30T10:47:53 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.products.tests.Scenario1.testAddProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testAddProduct()[pri:3, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:53 IST" name="testAddProduct" finished-at="2023-05-30T10:47:57 IST" duration-ms="4059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProduct -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:47:57 IST" name="afterMethod" finished-at="2023-05-30T10:47:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.products.tests.Scenario1@2034b64c]" started-at="2023-05-30T10:48:04 IST" name="afterSuite" finished-at="2023-05-30T10:48:05 IST" duration-ms="736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.products.tests.Scenario1 -->
    </test> <!-- API -->
  </suite> <!-- APIAutomation -->
  <suite started-at="2023-05-30T10:48:05 IST" name="Student-API-Automation" finished-at="2023-05-30T10:48:05 IST" duration-ms="0">
    <groups>
    </groups>
  </suite> <!-- Student-API-Automation -->
</testng-results>
